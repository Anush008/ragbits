ruff.....................................................................[41mFailed[m
[2m- hook id: ruff[m
[2m- exit code: 1[m

[1;33mwarning[0m[1m:[0m [1mThe top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:
  - 'extend-select' -> 'lint.extend-select'
  - 'ignore' -> 'lint.ignore'
  - 'select' -> 'lint.select'
  - 'explicit-preview-rules' -> 'lint.explicit-preview-rules'[0m
[1mpackages/ragbits-core/examples/chromadb_example.py[0m[36m:[0m24[36m:[0m11[36m:[0m [1;31mANN201[0m Missing return type annotation for public function `main`
[1;38;5;12m   |[0m
[1;38;5;12m24 |[0m async def main():
[1;38;5;12m   |[0m[1;38;5;9m           ^^^^[0m [1;38;5;9mANN201[0m
[1;38;5;12m25 |[0m     """Run the example."""
[1;38;5;12m26 |[0m     chroma_client = chromadb.PersistentClient(path="chroma")
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Add return type annotation: `None`

[1mpackages/ragbits-core/examples/llm_example.py[0m[36m:[0m15[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m14 |[0m   class LoremPromptInput(BaseModel):
[1;38;5;12m15 |[0m       """Input format for the LoremPrompt.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m16 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m17 |[0m   
[1;38;5;12m18 |[0m       theme: str
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/examples/llm_example.py[0m[36m:[0m23[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m22 |[0m   class LoremPromptOutput(BaseModel):
[1;38;5;12m23 |[0m       """Output format for the LoremPrompt.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m24 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m25 |[0m   
[1;38;5;12m26 |[0m       joke: str
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/examples/llm_example.py[0m[36m:[0m31[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m30 |[0m   class JokePrompt(Prompt[LoremPromptInput, LoremPromptOutput]):
[1;38;5;12m31 |[0m       """A prompt that generates jokes.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m32 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m33 |[0m   
[1;38;5;12m34 |[0m       system_prompt = """
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/examples/llm_example.py[0m[36m:[0m35[36m:[0m121[36m:[0m [1;31mE501[0m Line too long (127 > 120)
[1;38;5;12m   |[0m
[1;38;5;12m34 |[0m     system_prompt = """
[1;38;5;12m35 |[0m     You are a joke generator. The jokes you generate should be funny and not offensive. {% if not pun_allowed %}Also, make sure
[1;38;5;12m   |[0m[1;38;5;9m                                                                                                                         ^^^^^^^[0m [1;38;5;9mE501[0m
[1;38;5;12m36 |[0m     that the jokes do not contain any puns.{% else %}You can use any type of joke, even if it contains puns.{% endif %}
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/examples/llm_example.py[0m[36m:[0m46[36m:[0m11[36m:[0m [1;31mANN201[0m Missing return type annotation for public function `main`
[1;38;5;12m   |[0m
[1;38;5;12m46 |[0m async def main():
[1;38;5;12m   |[0m[1;38;5;9m           ^^^^[0m [1;38;5;9mANN201[0m
[1;38;5;12m47 |[0m     """Example of using the LiteLLM client with a Prompt class. Requires the OPENAI_API_KEY environment variable to be set.
[1;38;5;12m48 |[0m     """
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Add return type annotation: `None`

[1mpackages/ragbits-core/examples/llm_example.py[0m[36m:[0m47[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m46 |[0m   async def main():
[1;38;5;12m47 |[0m       """Example of using the LiteLLM client with a Prompt class. Requires the OPENAI_API_KEY environment variable to be set.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m48 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m49 |[0m       llm = LiteLLM("gpt-4o-2024-08-06", use_structured_output=True)
[1;38;5;12m50 |[0m       prompt = JokePrompt(LoremPromptInput(theme="software developers", pun_allowed=True))
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/examples/llm_example.py[0m[36m:[0m47[36m:[0m121[36m:[0m [1;31mE501[0m Line too long (123 > 120)
[1;38;5;12m   |[0m
[1;38;5;12m46 |[0m async def main():
[1;38;5;12m47 |[0m     """Example of using the LiteLLM client with a Prompt class. Requires the OPENAI_API_KEY environment variable to be set.
[1;38;5;12m   |[0m[1;38;5;9m                                                                                                                         ^^^[0m [1;38;5;9mE501[0m
[1;38;5;12m48 |[0m     """
[1;38;5;12m49 |[0m     llm = LiteLLM("gpt-4o-2024-08-06", use_structured_output=True)
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/examples/prompt_example.py[0m[36m:[0m12[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m11 |[0m   class LoremPromptInput(BaseModel):
[1;38;5;12m12 |[0m       """Input format for the LoremPrompt.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m13 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m14 |[0m   
[1;38;5;12m15 |[0m       theme: str
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/examples/prompt_example.py[0m[36m:[0m20[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m19 |[0m   class LoremPromptOutput(BaseModel):
[1;38;5;12m20 |[0m       """Output format for the LoremPrompt.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m21 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m22 |[0m   
[1;38;5;12m23 |[0m       text: str
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/examples/prompt_example.py[0m[36m:[0m27[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m26 |[0m   class LoremPrompt(Prompt[LoremPromptInput, LoremPromptOutput]):
[1;38;5;12m27 |[0m       """A prompt that generates Lorem Ipsum text.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m28 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m29 |[0m   
[1;38;5;12m30 |[0m       system_prompt = """
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/embeddings/base.py[0m[36m:[0m5[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m  |[0m
[1;38;5;12m4 |[0m   class Embeddings(ABC):
[1;38;5;12m5 |[0m       """Abstract client for communication with embedding models.
[1;38;5;12m  |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m6 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m  |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m7 |[0m   
[1;38;5;12m8 |[0m       @abstractmethod
[1;38;5;12m  |[0m
  [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/embeddings/exceptions.py[0m[36m:[0m2[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m  |[0m
[1;38;5;12m1 |[0m   class EmbeddingError(Exception):
[1;38;5;12m2 |[0m       """Base class for all exceptions raised by the EmbeddingClient.
[1;38;5;12m  |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m3 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m  |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m4 |[0m   
[1;38;5;12m5 |[0m       def __init__(self, message: str) -> None:
[1;38;5;12m  |[0m
  [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/embeddings/exceptions.py[0m[36m:[0m5[36m:[0m9[36m:[0m [1;31mD107[0m Missing docstring in `__init__`
[1;38;5;12m  |[0m
[1;38;5;12m3 |[0m     """
[1;38;5;12m4 |[0m 
[1;38;5;12m5 |[0m     def __init__(self, message: str) -> None:
[1;38;5;12m  |[0m[1;38;5;9m         ^^^^^^^^[0m [1;38;5;9mD107[0m
[1;38;5;12m6 |[0m         super().__init__(message)
[1;38;5;12m7 |[0m         self.message = message
[1;38;5;12m  |[0m

[1mpackages/ragbits-core/src/ragbits/core/embeddings/exceptions.py[0m[36m:[0m11[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m10 |[0m   class EmbeddingConnectionError(EmbeddingError):
[1;38;5;12m11 |[0m       """Raised when there is an error connecting to the embedding API.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m12 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m13 |[0m   
[1;38;5;12m14 |[0m       def __init__(self, message: str = "Connection error.") -> None:
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/embeddings/exceptions.py[0m[36m:[0m14[36m:[0m9[36m:[0m [1;31mD107[0m Missing docstring in `__init__`
[1;38;5;12m   |[0m
[1;38;5;12m12 |[0m     """
[1;38;5;12m13 |[0m 
[1;38;5;12m14 |[0m     def __init__(self, message: str = "Connection error.") -> None:
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^[0m [1;38;5;9mD107[0m
[1;38;5;12m15 |[0m         super().__init__(message)
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/embeddings/exceptions.py[0m[36m:[0m19[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m18 |[0m   class EmbeddingStatusError(EmbeddingError):
[1;38;5;12m19 |[0m       """Raised when an API response has a status code of 4xx or 5xx.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m20 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m21 |[0m   
[1;38;5;12m22 |[0m       def __init__(self, message: str, status_code: int) -> None:
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/embeddings/exceptions.py[0m[36m:[0m22[36m:[0m9[36m:[0m [1;31mD107[0m Missing docstring in `__init__`
[1;38;5;12m   |[0m
[1;38;5;12m20 |[0m     """
[1;38;5;12m21 |[0m 
[1;38;5;12m22 |[0m     def __init__(self, message: str, status_code: int) -> None:
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^[0m [1;38;5;9mD107[0m
[1;38;5;12m23 |[0m         super().__init__(message)
[1;38;5;12m24 |[0m         self.status_code = status_code
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/embeddings/exceptions.py[0m[36m:[0m28[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m27 |[0m   class EmbeddingResponseError(EmbeddingError):
[1;38;5;12m28 |[0m       """Raised when an API response has an invalid schema.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m29 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m30 |[0m   
[1;38;5;12m31 |[0m       def __init__(self, message: str = "Data returned by API invalid for expected schema.") -> None:
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/embeddings/exceptions.py[0m[36m:[0m31[36m:[0m9[36m:[0m [1;31mD107[0m Missing docstring in `__init__`
[1;38;5;12m   |[0m
[1;38;5;12m29 |[0m     """
[1;38;5;12m30 |[0m 
[1;38;5;12m31 |[0m     def __init__(self, message: str = "Data returned by API invalid for expected schema.") -> None:
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^[0m [1;38;5;9mD107[0m
[1;38;5;12m32 |[0m         super().__init__(message)
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/embeddings/litellm.py[0m[36m:[0m14[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m13 |[0m   class LiteLLMEmbeddings(Embeddings):
[1;38;5;12m14 |[0m       """Client for creating text embeddings using LiteLLM API.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m15 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m16 |[0m   
[1;38;5;12m17 |[0m       def __init__(
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/embeddings/local.py[0m[36m:[0m16[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m15 |[0m   class LocalEmbeddings(Embeddings):
[1;38;5;12m16 |[0m       """Class for interaction with any encoder available in HuggingFace.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m17 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m18 |[0m   
[1;38;5;12m19 |[0m       def __init__(
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/llms/base.py[0m[36m:[0m11[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m10 |[0m   class LLM(Generic[LLMClientOptions], ABC):
[1;38;5;12m11 |[0m       """Abstract class for interaction with Large Language Model.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m12 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m13 |[0m   
[1;38;5;12m14 |[0m       _options_cls: type[LLMClientOptions]
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/llms/base.py[0m[36m:[0m36[36m:[0m9[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m34 |[0m       @abstractmethod
[1;38;5;12m35 |[0m       def client(self) -> LLMClient:
[1;38;5;12m36 |[0m           """Client for the LLM.
[1;38;5;12m   |[0m  [1;38;5;9m_________^[0m
[1;38;5;12m37 |[0m [1;38;5;9m|[0m         """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m___________^[0m [1;38;5;9mD200[0m
[1;38;5;12m38 |[0m   
[1;38;5;12m39 |[0m       def count_tokens(self, prompt: BasePrompt) -> int:
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/llms/base.py[0m[36m:[0m39[36m:[0m9[36m:[0m [1;31mPLR6301[0m Method `count_tokens` could be a function, class method, or static method
[1;38;5;12m   |[0m
[1;38;5;12m37 |[0m         """
[1;38;5;12m38 |[0m 
[1;38;5;12m39 |[0m     def count_tokens(self, prompt: BasePrompt) -> int:
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^^^^^[0m [1;38;5;9mPLR6301[0m
[1;38;5;12m40 |[0m         """Counts tokens in the prompt.
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/llms/clients/base.py[0m[36m:[0m14[36m:[0m7[36m:[0m [1;31mB024[0m `LLMOptions` is an abstract base class, but it has no abstract methods
[1;38;5;12m   |[0m
[1;38;5;12m13 |[0m @dataclass
[1;38;5;12m14 |[0m class LLMOptions(ABC):
[1;38;5;12m   |[0m[1;38;5;9m       ^^^^^^^^^^[0m [1;38;5;9mB024[0m
[1;38;5;12m15 |[0m     """Abstract dataclass that represents all available LLM call options.
[1;38;5;12m16 |[0m     """
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/llms/clients/base.py[0m[36m:[0m15[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m13 |[0m   @dataclass
[1;38;5;12m14 |[0m   class LLMOptions(ABC):
[1;38;5;12m15 |[0m       """Abstract dataclass that represents all available LLM call options.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m16 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m17 |[0m   
[1;38;5;12m18 |[0m       _not_given: ClassVar[Any] = None
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/llms/clients/base.py[0m[36m:[0m21[36m:[0m9[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m20 |[0m       def __or__(self, other: "LLMOptions") -> "LLMOptions":
[1;38;5;12m21 |[0m           """Merges two LLMOptions, prioritizing non-NOT_GIVEN values from the 'other' object.
[1;38;5;12m   |[0m  [1;38;5;9m_________^[0m
[1;38;5;12m22 |[0m [1;38;5;9m|[0m         """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m___________^[0m [1;38;5;9mD200[0m
[1;38;5;12m23 |[0m           self_dict = asdict(self)
[1;38;5;12m24 |[0m           other_dict = asdict(other)
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/llms/clients/base.py[0m[36m:[0m50[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m49 |[0m   class LLMClient(Generic[LLMClientOptions], ABC):
[1;38;5;12m50 |[0m       """Abstract client for a direct communication with LLM.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m51 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m52 |[0m   
[1;38;5;12m53 |[0m       def __init__(self, model_name: str) -> None:
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/llms/clients/exceptions.py[0m[36m:[0m2[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m  |[0m
[1;38;5;12m1 |[0m   class LLMError(Exception):
[1;38;5;12m2 |[0m       """Base class for all exceptions raised by the LLMClient.
[1;38;5;12m  |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m3 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m  |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m4 |[0m   
[1;38;5;12m5 |[0m       def __init__(self, message: str) -> None:
[1;38;5;12m  |[0m
  [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/llms/clients/exceptions.py[0m[36m:[0m5[36m:[0m9[36m:[0m [1;31mD107[0m Missing docstring in `__init__`
[1;38;5;12m  |[0m
[1;38;5;12m3 |[0m     """
[1;38;5;12m4 |[0m 
[1;38;5;12m5 |[0m     def __init__(self, message: str) -> None:
[1;38;5;12m  |[0m[1;38;5;9m         ^^^^^^^^[0m [1;38;5;9mD107[0m
[1;38;5;12m6 |[0m         super().__init__(message)
[1;38;5;12m7 |[0m         self.message = message
[1;38;5;12m  |[0m

[1mpackages/ragbits-core/src/ragbits/core/llms/clients/exceptions.py[0m[36m:[0m11[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m10 |[0m   class LLMConnectionError(LLMError):
[1;38;5;12m11 |[0m       """Raised when there is an error connecting to the LLM API.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m12 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m13 |[0m   
[1;38;5;12m14 |[0m       def __init__(self, message: str = "Connection error.") -> None:
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/llms/clients/exceptions.py[0m[36m:[0m14[36m:[0m9[36m:[0m [1;31mD107[0m Missing docstring in `__init__`
[1;38;5;12m   |[0m
[1;38;5;12m12 |[0m     """
[1;38;5;12m13 |[0m 
[1;38;5;12m14 |[0m     def __init__(self, message: str = "Connection error.") -> None:
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^[0m [1;38;5;9mD107[0m
[1;38;5;12m15 |[0m         super().__init__(message)
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/llms/clients/exceptions.py[0m[36m:[0m19[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m18 |[0m   class LLMStatusError(LLMError):
[1;38;5;12m19 |[0m       """Raised when an API response has a status code of 4xx or 5xx.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m20 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m21 |[0m   
[1;38;5;12m22 |[0m       def __init__(self, message: str, status_code: int) -> None:
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/llms/clients/exceptions.py[0m[36m:[0m22[36m:[0m9[36m:[0m [1;31mD107[0m Missing docstring in `__init__`
[1;38;5;12m   |[0m
[1;38;5;12m20 |[0m     """
[1;38;5;12m21 |[0m 
[1;38;5;12m22 |[0m     def __init__(self, message: str, status_code: int) -> None:
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^[0m [1;38;5;9mD107[0m
[1;38;5;12m23 |[0m         super().__init__(message)
[1;38;5;12m24 |[0m         self.status_code = status_code
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/llms/clients/exceptions.py[0m[36m:[0m28[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m27 |[0m   class LLMResponseError(LLMError):
[1;38;5;12m28 |[0m       """Raised when an API response has an invalid schema.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m29 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m30 |[0m   
[1;38;5;12m31 |[0m       def __init__(self, message: str = "Data returned by API invalid for expected schema.") -> None:
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/llms/clients/exceptions.py[0m[36m:[0m31[36m:[0m9[36m:[0m [1;31mD107[0m Missing docstring in `__init__`
[1;38;5;12m   |[0m
[1;38;5;12m29 |[0m     """
[1;38;5;12m30 |[0m 
[1;38;5;12m31 |[0m     def __init__(self, message: str = "Data returned by API invalid for expected schema.") -> None:
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^[0m [1;38;5;9mD107[0m
[1;38;5;12m32 |[0m         super().__init__(message)
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/llms/clients/local.py[0m[36m:[0m21[36m:[0m5[36m:[0m [1;31mD415[0m First line should end with a period, question mark, or exclamation point
[1;38;5;12m   |[0m
[1;38;5;12m19 |[0m   @dataclass
[1;38;5;12m20 |[0m   class LocalLLMOptions(LLMOptions):
[1;38;5;12m21 |[0m       """Dataclass that represents all available LLM call options for the local LLM client.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m22 |[0m [1;38;5;9m|[0m     Each of them is described in the [HuggingFace documentation]
[1;38;5;12m23 |[0m [1;38;5;9m|[0m     (https://huggingface.co/docs/huggingface_hub/en/package_reference/inference_client#huggingface_hub.InferenceClient.text_generation). # pylint: disable=line-too-long
[1;38;5;12m24 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD415[0m
[1;38;5;12m25 |[0m   
[1;38;5;12m26 |[0m       repetition_penalty: float | None | NotGiven = NOT_GIVEN
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Add closing punctuation

[1mpackages/ragbits-core/src/ragbits/core/llms/clients/local.py[0m[36m:[0m23[36m:[0m121[36m:[0m [1;31mE501[0m Line too long (168 > 120)
[1;38;5;12m   |[0m
[1;38;5;12m21 |[0m     """Dataclass that represents all available LLM call options for the local LLM client.
[1;38;5;12m22 |[0m     Each of them is described in the [HuggingFace documentation]
[1;38;5;12m23 |[0m     (https://huggingface.co/docs/huggingface_hub/en/package_reference/inference_client#huggingface_hub.InferenceClient.text_generation). # pylint: disable=line-too-long
[1;38;5;12m   |[0m[1;38;5;9m                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1;38;5;9mE501[0m
[1;38;5;12m24 |[0m     """
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/llms/clients/local.py[0m[36m:[0m38[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m37 |[0m   class LocalLLMClient(LLMClient[LocalLLMOptions]):
[1;38;5;12m38 |[0m       """Client for the local LLM that supports Hugging Face models.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m39 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m40 |[0m   
[1;38;5;12m41 |[0m       _options_cls = LocalLLMOptions
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/llms/litellm.py[0m[36m:[0m17[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m16 |[0m   class LiteLLM(LLM[LiteLLMOptions]):
[1;38;5;12m17 |[0m       """Class for interaction with any LLM supported by LiteLLM API.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m18 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m19 |[0m   
[1;38;5;12m20 |[0m       _options_cls = LiteLLMOptions
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/llms/litellm.py[0m[36m:[0m61[36m:[0m9[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m59 |[0m       @cached_property
[1;38;5;12m60 |[0m       def client(self) -> LiteLLMClient:
[1;38;5;12m61 |[0m           """Client for the LLM.
[1;38;5;12m   |[0m  [1;38;5;9m_________^[0m
[1;38;5;12m62 |[0m [1;38;5;9m|[0m         """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m___________^[0m [1;38;5;9mD200[0m
[1;38;5;12m63 |[0m           return LiteLLMClient(
[1;38;5;12m64 |[0m               model_name=self.model_name,
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/llms/local.py[0m[36m:[0m17[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m16 |[0m   class LocalLLM(LLM[LocalLLMOptions]):
[1;38;5;12m17 |[0m       """Class for interaction with any LLM available in HuggingFace.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m18 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m19 |[0m   
[1;38;5;12m20 |[0m       _options_cls = LocalLLMOptions
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/prompt/base.py[0m[36m:[0m12[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m11 |[0m   class BasePrompt(metaclass=ABCMeta):
[1;38;5;12m12 |[0m       """Base class for prompts
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m13 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m14 |[0m   
[1;38;5;12m15 |[0m       @property
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/prompt/base.py[0m[36m:[0m12[36m:[0m5[36m:[0m [1;31mD415[0m First line should end with a period, question mark, or exclamation point
[1;38;5;12m   |[0m
[1;38;5;12m11 |[0m   class BasePrompt(metaclass=ABCMeta):
[1;38;5;12m12 |[0m       """Base class for prompts
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m13 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD415[0m
[1;38;5;12m14 |[0m   
[1;38;5;12m15 |[0m       @property
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Add closing punctuation

[1mpackages/ragbits-core/src/ragbits/core/prompt/base.py[0m[36m:[0m26[36m:[0m9[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m24 |[0m       @property
[1;38;5;12m25 |[0m       def json_mode(self) -> bool:
[1;38;5;12m26 |[0m           """Returns whether the prompt should be sent in JSON mode.
[1;38;5;12m   |[0m  [1;38;5;9m_________^[0m
[1;38;5;12m27 |[0m [1;38;5;9m|[0m         """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m___________^[0m [1;38;5;9mD200[0m
[1;38;5;12m28 |[0m           return self.output_schema() is not None
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/prompt/base.py[0m[36m:[0m30[36m:[0m9[36m:[0m [1;31mPLR6301[0m Method `output_schema` could be a function, class method, or static method
[1;38;5;12m   |[0m
[1;38;5;12m28 |[0m         return self.output_schema() is not None
[1;38;5;12m29 |[0m 
[1;38;5;12m30 |[0m     def output_schema(self) -> dict | type[BaseModel] | None:
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^^^^^^[0m [1;38;5;9mPLR6301[0m
[1;38;5;12m31 |[0m         """Returns the schema of the desired output. Can be used to request structured output from the LLM API
[1;38;5;12m32 |[0m         or to validate the output. Can return either a Pydantic model or a JSON schema.
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/prompt/discovery/prompt_discovery.py[0m[36m:[0m20[36m:[0m9[36m:[0m [1;31mD107[0m Missing docstring in `__init__`
[1;38;5;12m   |[0m
[1;38;5;12m18 |[0m     """
[1;38;5;12m19 |[0m 
[1;38;5;12m20 |[0m     def __init__(self, file_pattern: str = DEFAULT_FILE_PATTERN, root_path: Path = Path.cwd()):
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^[0m [1;38;5;9mD107[0m
[1;38;5;12m21 |[0m         self.file_pattern = file_pattern
[1;38;5;12m22 |[0m         self.root_path = root_path
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/prompt/discovery/prompt_discovery.py[0m[36m:[0m20[36m:[0m84[36m:[0m [1;31mB008[0m Do not perform function call `Path.cwd` in argument defaults; instead, perform the call within the function, or read the default from a module-level singleton variable
[1;38;5;12m   |[0m
[1;38;5;12m18 |[0m     """
[1;38;5;12m19 |[0m 
[1;38;5;12m20 |[0m     def __init__(self, file_pattern: str = DEFAULT_FILE_PATTERN, root_path: Path = Path.cwd()):
[1;38;5;12m   |[0m[1;38;5;9m                                                                                    ^^^^^^^^^^[0m [1;38;5;9mB008[0m
[1;38;5;12m21 |[0m         self.file_pattern = file_pattern
[1;38;5;12m22 |[0m         self.root_path = root_path
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/prompt/discovery/prompt_discovery.py[0m[36m:[0m25[36m:[0m33[36m:[0m [1;31mANN401[0m Dynamically typed expressions (typing.Any) are disallowed in `obj`
[1;38;5;12m   |[0m
[1;38;5;12m24 |[0m     @staticmethod
[1;38;5;12m25 |[0m     def is_prompt_subclass(obj: Any) -> bool:
[1;38;5;12m   |[0m[1;38;5;9m                                 ^^^[0m [1;38;5;9mANN401[0m
[1;38;5;12m26 |[0m         """Checks if an object is a class that is a subclass of Prompt (but not Prompt itself).
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/prompt/discovery/prompt_discovery.py[0m[36m:[0m57[36m:[0m13[36m:[0m [1;31mS101[0m Use of `assert` detected
[1;38;5;12m   |[0m
[1;38;5;12m55 |[0m             module = importlib.util.module_from_spec(spec)
[1;38;5;12m56 |[0m 
[1;38;5;12m57 |[0m             assert spec.loader is not None
[1;38;5;12m   |[0m[1;38;5;9m             ^^^^^^[0m [1;38;5;9mS101[0m
[1;38;5;12m58 |[0m 
[1;38;5;12m59 |[0m             try:
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/prompt/lab/app.py[0m[36m:[0m40[36m:[0m96[36m:[0m [1;31mANN401[0m Dynamically typed expressions (typing.Any) are disallowed in `*args`
[1;38;5;12m   |[0m
[1;38;5;12m40 |[0m def render_prompt(index: int, system_prompt: str, user_prompt: str, state: PromptState, *args: Any) -> PromptState:
[1;38;5;12m   |[0m[1;38;5;9m                                                                                                ^^^[0m [1;38;5;9mANN401[0m
[1;38;5;12m41 |[0m     """Renders a prompt based on the provided key, system prompt, user prompt, and input variables.
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/prompt/lab/app.py[0m[36m:[0m97[36m:[0m5[36m:[0m [1;31mS101[0m Use of `assert` detected
[1;38;5;12m   |[0m
[1;38;5;12m95 |[0m         str: The response generated by the LLM.
[1;38;5;12m96 |[0m     """
[1;38;5;12m97 |[0m     assert state.llm_model_name is not None, "LLM model name is not set."
[1;38;5;12m   |[0m[1;38;5;9m     ^^^^^^[0m [1;38;5;9mS101[0m
[1;38;5;12m98 |[0m     llm_client = LiteLLM(model_name=state.llm_model_name, api_key=state.llm_api_key)
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/prompt/lab/app.py[0m[36m:[0m100[36m:[0m5[36m:[0m [1;31mS101[0m Use of `assert` detected
[1;38;5;12m    |[0m
[1;38;5;12m 98 |[0m     llm_client = LiteLLM(model_name=state.llm_model_name, api_key=state.llm_api_key)
[1;38;5;12m 99 |[0m 
[1;38;5;12m100 |[0m     assert state.rendered_prompt is not None, "Prompt has not been rendered yet."
[1;38;5;12m    |[0m[1;38;5;9m     ^^^^^^[0m [1;38;5;9mS101[0m
[1;38;5;12m101 |[0m     try:
[1;38;5;12m102 |[0m         response = asyncio.run(
[1;38;5;12m    |[0m

[1mpackages/ragbits-core/src/ragbits/core/prompt/lab/app.py[0m[36m:[0m173[36m:[0m17[36m:[0m [1;31mSIM117[0m Use a single `with` statement with multiple contexts instead of nested `with` statements
[1;38;5;12m    |[0m
[1;38;5;12m171 |[0m               list_of_vars = []
[1;38;5;12m172 |[0m               with gr.Row():
[1;38;5;12m173 |[0m                   with gr.Column(scale=1):
[1;38;5;12m    |[0m  [1;38;5;9m_________________^[0m
[1;38;5;12m174 |[0m [1;38;5;9m|[0m                     with gr.Tab("Inputs"):
[1;38;5;12m    |[0m [1;38;5;9m|[0m[1;38;5;9m__________________________________________^[0m [1;38;5;9mSIM117[0m
[1;38;5;12m175 |[0m                           input_fields: list = get_input_type_fields(prompt.input_type)
[1;38;5;12m176 |[0m                           for entry in input_fields:
[1;38;5;12m    |[0m
    [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Combine `with` statements

[1mpackages/ragbits-core/src/ragbits/core/prompt/lab/app.py[0m[36m:[0m187[36m:[0m17[36m:[0m [1;31mSIM117[0m Use a single `with` statement with multiple contexts instead of nested `with` statements
[1;38;5;12m    |[0m
[1;38;5;12m185 |[0m                           render_prompt_button = gr.Button(value="Render prompts")
[1;38;5;12m186 |[0m   
[1;38;5;12m187 |[0m                   with gr.Column(scale=4):
[1;38;5;12m    |[0m  [1;38;5;9m_________________^[0m
[1;38;5;12m188 |[0m [1;38;5;9m|[0m                     with gr.Tab("Prompt"):
[1;38;5;12m    |[0m [1;38;5;9m|[0m[1;38;5;9m__________________________________________^[0m [1;38;5;9mSIM117[0m
[1;38;5;12m189 |[0m                           with gr.Row():
[1;38;5;12m190 |[0m                               with gr.Column():
[1;38;5;12m    |[0m
    [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Combine `with` statements

[1mpackages/ragbits-core/src/ragbits/core/prompt/parsers.py[0m[36m:[0m10[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m 9 |[0m   class ResponseParsingError(Exception):
[1;38;5;12m10 |[0m       """Raised when there is an error parsing an API response.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m11 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m12 |[0m   
[1;38;5;12m13 |[0m       def __init__(self, message: str) -> None:
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/prompt/parsers.py[0m[36m:[0m13[36m:[0m9[36m:[0m [1;31mD107[0m Missing docstring in `__init__`
[1;38;5;12m   |[0m
[1;38;5;12m11 |[0m     """
[1;38;5;12m12 |[0m 
[1;38;5;12m13 |[0m     def __init__(self, message: str) -> None:
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^[0m [1;38;5;9mD107[0m
[1;38;5;12m14 |[0m         super().__init__(message)
[1;38;5;12m15 |[0m         self.message = message
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/prompt/prompt.py[0m[36m:[0m49[36m:[0m17[36m:[0m [1;31mS101[0m Use of `assert` detected
[1;38;5;12m   |[0m
[1;38;5;12m47 |[0m                 output_type = args[1] if len(args) > 1 else str
[1;38;5;12m48 |[0m 
[1;38;5;12m49 |[0m                 assert input_type is None or issubclass(
[1;38;5;12m   |[0m[1;38;5;9m                 ^^^^^^[0m [1;38;5;9mS101[0m
[1;38;5;12m50 |[0m                     input_type, BaseModel
[1;38;5;12m51 |[0m                 ), "Input type must be a subclass of BaseModel"
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/prompt/prompt.py[0m[36m:[0m57[36m:[0m15[36m:[0m [1;31mS701[0m By default, jinja2 sets `autoescape` to `False`. Consider using `autoescape=True` or the `select_autoescape` function to mitigate XSS vulnerabilities.
[1;38;5;12m   |[0m
[1;38;5;12m55 |[0m     @classmethod
[1;38;5;12m56 |[0m     def _parse_template(cls, template: str) -> Template:
[1;38;5;12m57 |[0m         env = Environment()  # nosec B701 - HTML autoescaping not needed for plain text
[1;38;5;12m   |[0m[1;38;5;9m               ^^^^^^^^^^^[0m [1;38;5;9mS701[0m
[1;38;5;12m58 |[0m         ast = env.parse(template)
[1;38;5;12m59 |[0m         template_variables = meta.find_undeclared_variables(ast)
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/prompt/prompt.py[0m[36m:[0m90[36m:[0m42[36m:[0m [1;31mANN401[0m Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
[1;38;5;12m   |[0m
[1;38;5;12m89 |[0m     @classmethod
[1;38;5;12m90 |[0m     def __init_subclass__(cls, **kwargs: Any) -> None:
[1;38;5;12m   |[0m[1;38;5;9m                                          ^^^[0m [1;38;5;9mANN401[0m
[1;38;5;12m91 |[0m         if not hasattr(cls, "user_prompt") or cls.user_prompt is None:
[1;38;5;12m92 |[0m             raise ValueError("User prompt must be provided")
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/prompt/prompt.py[0m[36m:[0m111[36m:[0m9[36m:[0m [1;31mD107[0m Missing docstring in `__init__`
[1;38;5;12m    |[0m
[1;38;5;12m109 |[0m         ...
[1;38;5;12m110 |[0m 
[1;38;5;12m111 |[0m     def __init__(self, *args: Any, **kwargs: Any) -> None:
[1;38;5;12m    |[0m[1;38;5;9m         ^^^^^^^^[0m [1;38;5;9mD107[0m
[1;38;5;12m112 |[0m         input_data = args[0] if args else kwargs.get("input_data")
[1;38;5;12m113 |[0m         if self.input_type and input_data is None:
[1;38;5;12m    |[0m

[1mpackages/ragbits-core/src/ragbits/core/prompt/promptfoo.py[0m[36m:[0m11[36m:[0m65[36m:[0m [1;31mB008[0m Do not perform function call `Path.cwd` in argument defaults; instead, perform the call within the function, or read the default from a module-level singleton variable
[1;38;5;12m   |[0m
[1;38;5;12m10 |[0m def generate_configs(
[1;38;5;12m11 |[0m     file_pattern: str = DEFAULT_FILE_PATTERN, root_path: Path = Path.cwd(), target_path: Path = Path("promptfooconfigs")
[1;38;5;12m   |[0m[1;38;5;9m                                                                 ^^^^^^^^^^[0m [1;38;5;9mB008[0m
[1;38;5;12m12 |[0m ) -> None:
[1;38;5;12m13 |[0m     """Generates promptfoo configuration files for all discovered prompts.
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/vector_store/base.py[0m[36m:[0m7[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m 6 |[0m   class VectorDBEntry(BaseModel):
[1;38;5;12m 7 |[0m       """An object representing a vector database entry.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m 8 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m 9 |[0m   
[1;38;5;12m10 |[0m       key: str
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/vector_store/base.py[0m[36m:[0m16[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m15 |[0m   class VectorStore(abc.ABC):
[1;38;5;12m16 |[0m       """A class with an implementation of Vector Store, allowing to store and retrieve vectors by similarity function.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m17 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m18 |[0m   
[1;38;5;12m19 |[0m       @abc.abstractmethod
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/vector_store/chromadb_store.py[0m[36m:[0m18[36m:[0m5[36m:[0m [1;31mD415[0m First line should end with a period, question mark, or exclamation point
[1;38;5;12m   |[0m
[1;38;5;12m17 |[0m class ChromaDBStore(VectorStore):
[1;38;5;12m18 |[0m     """Class that stores text embeddings using [Chroma](https://docs.trychroma.com/)"""
[1;38;5;12m   |[0m[1;38;5;9m     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1;38;5;9mD415[0m
[1;38;5;12m19 |[0m 
[1;38;5;12m20 |[0m     def __init__(
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Add closing punctuation

[1mpackages/ragbits-core/src/ragbits/core/vector_store/chromadb_store.py[0m[36m:[0m64[36m:[0m9[36m:[0m [1;31mD417[0m Missing argument description in the docstring for `_return_best_match`: `retrieved`
[1;38;5;12m   |[0m
[1;38;5;12m62 |[0m         )
[1;38;5;12m63 |[0m 
[1;38;5;12m64 |[0m     def _return_best_match(self, retrieved: dict) -> str | None:
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^^^^^^^^^^^[0m [1;38;5;9mD417[0m
[1;38;5;12m65 |[0m         """Based on the retrieved data, returns the best match or None if no match is found.
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/vector_store/chromadb_store.py[0m[36m:[0m78[36m:[0m9[36m:[0m [1;31mPLR6301[0m Method `_process_db_entry` could be a function, class method, or static method
[1;38;5;12m   |[0m
[1;38;5;12m76 |[0m         return None
[1;38;5;12m77 |[0m 
[1;38;5;12m78 |[0m     def _process_db_entry(self, entry: VectorDBEntry) -> tuple[str, list[float], dict]:
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^^^^^^^^^^[0m [1;38;5;9mPLR6301[0m
[1;38;5;12m79 |[0m         doc_id = sha256(entry.key.encode("utf-8")).hexdigest()
[1;38;5;12m80 |[0m         embedding = entry.vector
[1;38;5;12m   |[0m

[1mpackages/ragbits-core/src/ragbits/core/vector_store/in_memory.py[0m[36m:[0m6[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m  |[0m
[1;38;5;12m5 |[0m   class InMemoryVectorStore(VectorStore):
[1;38;5;12m6 |[0m       """A simple in-memory implementation of Vector Store, storing vectors in memory.
[1;38;5;12m  |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m7 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m  |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m8 |[0m   
[1;38;5;12m9 |[0m       def __init__(self) -> None:
[1;38;5;12m  |[0m
  [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-core/src/ragbits/core/vector_store/in_memory.py[0m[36m:[0m9[36m:[0m9[36m:[0m [1;31mD107[0m Missing docstring in `__init__`
[1;38;5;12m   |[0m
[1;38;5;12m 7 |[0m     """
[1;38;5;12m 8 |[0m 
[1;38;5;12m 9 |[0m     def __init__(self) -> None:
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^[0m [1;38;5;9mD107[0m
[1;38;5;12m10 |[0m         self._storage: dict[str, VectorDBEntry] = {}
[1;38;5;12m   |[0m

[1mpackages/ragbits-document-search/examples/simple_text.py[0m[36m:[0m26[36m:[0m11[36m:[0m [1;31mANN201[0m Missing return type annotation for public function `main`
[1;38;5;12m   |[0m
[1;38;5;12m26 |[0m async def main():
[1;38;5;12m   |[0m[1;38;5;9m           ^^^^[0m [1;38;5;9mANN201[0m
[1;38;5;12m27 |[0m     """Run the example."""
[1;38;5;12m28 |[0m     document_search = DocumentSearch(embedder=LiteLLMEmbeddings(), vector_store=InMemoryVectorStore())
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Add return type annotation: `None`

[1mpackages/ragbits-document-search/src/ragbits/document_search/_main.py[0m[36m:[0m17[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m16 |[0m   class SearchConfig(BaseModel):
[1;38;5;12m17 |[0m       """Configuration for the search process.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m18 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m19 |[0m   
[1;38;5;12m20 |[0m       reranker_kwargs: dict[str, Any] = Field(default_factory=dict)
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-document-search/src/ragbits/document_search/_main.py[0m[36m:[0m58[36m:[0m70[36m:[0m [1;31mB008[0m Do not perform function call `SearchConfig` in argument defaults; instead, perform the call within the function, or read the default from a module-level singleton variable
[1;38;5;12m   |[0m
[1;38;5;12m56 |[0m         self.document_processor_router = document_processor_router or DocumentProcessorRouter.from_config()
[1;38;5;12m57 |[0m 
[1;38;5;12m58 |[0m     async def search(self, query: str, search_config: SearchConfig = SearchConfig()) -> list[Element]:
[1;38;5;12m   |[0m[1;38;5;9m                                                                      ^^^^^^^^^^^^^^[0m [1;38;5;9mB008[0m
[1;38;5;12m59 |[0m         """Search for the most relevant chunks for a query.
[1;38;5;12m   |[0m

[1mpackages/ragbits-document-search/src/ragbits/document_search/documents/document.py[0m[36m:[0m35[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m34 |[0m   class DocumentMeta(BaseModel):
[1;38;5;12m35 |[0m       """An object representing a document metadata.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m36 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m37 |[0m   
[1;38;5;12m38 |[0m       document_type: DocumentType
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-document-search/src/ragbits/document_search/documents/document.py[0m[36m:[0m95[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m94 |[0m   class Document(BaseModel):
[1;38;5;12m95 |[0m       """An object representing a document which is downloaded and stored locally.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m96 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m97 |[0m   
[1;38;5;12m98 |[0m       local_path: Path
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-document-search/src/ragbits/document_search/documents/document.py[0m[36m:[0m119[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m    |[0m
[1;38;5;12m118 |[0m   class TextDocument(Document):
[1;38;5;12m119 |[0m       """An object representing a text document.
[1;38;5;12m    |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m120 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m    |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m121 |[0m   
[1;38;5;12m122 |[0m       @property
[1;38;5;12m    |[0m
    [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-document-search/src/ragbits/document_search/documents/element.py[0m[36m:[0m10[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m 9 |[0m   class Element(BaseModel, ABC):
[1;38;5;12m10 |[0m       """An object representing an element in a document.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m11 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m12 |[0m   
[1;38;5;12m13 |[0m       element_type: str
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-document-search/src/ragbits/document_search/documents/element.py[0m[36m:[0m68[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m67 |[0m   class TextElement(Element):
[1;38;5;12m68 |[0m       """An object representing a text element in a document.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m69 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m70 |[0m   
[1;38;5;12m71 |[0m       element_type: str = "text"
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-document-search/src/ragbits/document_search/documents/sources.py[0m[36m:[0m20[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m19 |[0m   class Source(BaseModel, ABC):
[1;38;5;12m20 |[0m       """An object representing a source.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m21 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m22 |[0m   
[1;38;5;12m23 |[0m       @abstractmethod
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-document-search/src/ragbits/document_search/documents/sources.py[0m[36m:[0m41[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m40 |[0m   class LocalFileSource(Source):
[1;38;5;12m41 |[0m       """An object representing a local file source.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m42 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m43 |[0m   
[1;38;5;12m44 |[0m       source_type: Literal["local_file"] = "local_file"
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-document-search/src/ragbits/document_search/documents/sources.py[0m[36m:[0m65[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m64 |[0m   class GCSSource(Source):
[1;38;5;12m65 |[0m       """An object representing a GCS file source.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m66 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m67 |[0m   
[1;38;5;12m68 |[0m       source_type: Literal["gcs"] = "gcs"
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-document-search/src/ragbits/document_search/ingestion/document_processor.py[0m[36m:[0m37[36m:[0m9[36m:[0m [1;31mD107[0m Missing docstring in `__init__`
[1;38;5;12m   |[0m
[1;38;5;12m35 |[0m     """
[1;38;5;12m36 |[0m 
[1;38;5;12m37 |[0m     def __init__(self, providers: dict[DocumentType, BaseProvider]):
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^[0m [1;38;5;9mD107[0m
[1;38;5;12m38 |[0m         self._providers = providers
[1;38;5;12m   |[0m

[1mpackages/ragbits-document-search/src/ragbits/document_search/ingestion/document_processor.py[0m[36m:[0m42[36m:[0m9[36m:[0m [1;31mD415[0m First line should end with a period, question mark, or exclamation point
[1;38;5;12m   |[0m
[1;38;5;12m40 |[0m       @classmethod
[1;38;5;12m41 |[0m       def from_config(cls, providers_config: ProvidersConfig | None = None) -> "DocumentProcessorRouter":
[1;38;5;12m42 |[0m           """Create a DocumentProcessorRouter from a configuration. If the configuration is not provided, the default
[1;38;5;12m   |[0m  [1;38;5;9m_________^[0m
[1;38;5;12m43 |[0m [1;38;5;9m|[0m         configuration will be used. If the configuration is provided, it will be merged with the default configuration,
[1;38;5;12m44 |[0m [1;38;5;9m|[0m         overriding the default values for the document types that are defined in the configuration.
[1;38;5;12m45 |[0m [1;38;5;9m|[0m         Example of the configuration:
[1;38;5;12m46 |[0m [1;38;5;9m|[0m         {
[1;38;5;12m47 |[0m [1;38;5;9m|[0m             DocumentType.TXT: YourCustomProviderClass(),
[1;38;5;12m48 |[0m [1;38;5;9m|[0m             DocumentType.PDF: UnstructuredProvider(),
[1;38;5;12m49 |[0m [1;38;5;9m|[0m         }
[1;38;5;12m50 |[0m [1;38;5;9m|[0m 
[1;38;5;12m51 |[0m [1;38;5;9m|[0m         Args:
[1;38;5;12m52 |[0m [1;38;5;9m|[0m             providers_config: The dictionary with the providers configuration, mapping the document types to the
[1;38;5;12m53 |[0m [1;38;5;9m|[0m              provider class.
[1;38;5;12m54 |[0m [1;38;5;9m|[0m 
[1;38;5;12m55 |[0m [1;38;5;9m|[0m         Returns:
[1;38;5;12m56 |[0m [1;38;5;9m|[0m             The DocumentProcessorRouter.
[1;38;5;12m57 |[0m [1;38;5;9m|[0m         """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m___________^[0m [1;38;5;9mD415[0m
[1;38;5;12m58 |[0m           config = copy.deepcopy(DEFAULT_PROVIDERS_CONFIG)
[1;38;5;12m59 |[0m           config.update(providers_config if providers_config is not None else {})
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Add closing punctuation

[1mpackages/ragbits-document-search/src/ragbits/document_search/ingestion/providers/base.py[0m[36m:[0m10[36m:[0m9[36m:[0m [1;31mD107[0m Missing docstring in `__init__`
[1;38;5;12m   |[0m
[1;38;5;12m 8 |[0m     """Raised when the document type is not supported by the provider."""
[1;38;5;12m 9 |[0m 
[1;38;5;12m10 |[0m     def __init__(self, provider_name: str, document_type: DocumentType) -> None:
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^[0m [1;38;5;9mD107[0m
[1;38;5;12m11 |[0m         message = f"Document type {document_type} is not supported by the {provider_name}"
[1;38;5;12m12 |[0m         super().__init__(message)
[1;38;5;12m   |[0m

[1mpackages/ragbits-document-search/src/ragbits/document_search/ingestion/providers/unstructured.py[0m[36m:[0m26[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m25 |[0m   class UnstructuredProvider(BaseProvider):
[1;38;5;12m26 |[0m       """A provider that uses the Unstructured API to process the documents.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m27 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m28 |[0m   
[1;38;5;12m29 |[0m       SUPPORTED_DOCUMENT_TYPES = {
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-document-search/src/ragbits/document_search/ingestion/providers/unstructured.py[0m[36m:[0m50[36m:[0m9[36m:[0m [1;31mD417[0m Missing argument description in the docstring for `__init__`: `chunking_kwargs`
[1;38;5;12m   |[0m
[1;38;5;12m48 |[0m     }
[1;38;5;12m49 |[0m 
[1;38;5;12m50 |[0m     def __init__(self, partition_kwargs: dict | None = None, chunking_kwargs: dict | None = None):
[1;38;5;12m   |[0m[1;38;5;9m         ^^^^^^^^[0m [1;38;5;9mD417[0m
[1;38;5;12m51 |[0m         """Initialize the UnstructuredProvider.
[1;38;5;12m   |[0m

[1mpackages/ragbits-document-search/src/ragbits/document_search/retrieval/rephrasers/base.py[0m[36m:[0m5[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m  |[0m
[1;38;5;12m4 |[0m   class QueryRephraser(abc.ABC):
[1;38;5;12m5 |[0m       """Rephrases a query. Can provide multiple rephrased queries from one sentence / question.
[1;38;5;12m  |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m6 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m  |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m7 |[0m   
[1;38;5;12m8 |[0m       @staticmethod
[1;38;5;12m  |[0m
  [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-document-search/src/ragbits/document_search/retrieval/rephrasers/noop.py[0m[36m:[0m5[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m  |[0m
[1;38;5;12m4 |[0m   class NoopQueryRephraser(QueryRephraser):
[1;38;5;12m5 |[0m       """A no-op query paraphraser that does not change the query.
[1;38;5;12m  |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m6 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m  |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m7 |[0m   
[1;38;5;12m8 |[0m       @staticmethod
[1;38;5;12m  |[0m
  [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-document-search/src/ragbits/document_search/retrieval/rerankers/base.py[0m[36m:[0m7[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m 6 |[0m   class Reranker(abc.ABC):
[1;38;5;12m 7 |[0m       """Reranks chunks retrieved from vector store.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m 8 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m 9 |[0m   
[1;38;5;12m10 |[0m       @staticmethod
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mpackages/ragbits-document-search/src/ragbits/document_search/retrieval/rerankers/noop.py[0m[36m:[0m7[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m 6 |[0m   class NoopReranker(Reranker):
[1;38;5;12m 7 |[0m       """A no-op reranker that does not change the order of the chunks.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m 8 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m 9 |[0m   
[1;38;5;12m10 |[0m       @staticmethod
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mscripts/create_ragbits_package.py[0m[36m:[0m22[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m21 |[0m   def run() -> None:
[1;38;5;12m22 |[0m       """Create a new Ragbits package.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m23 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m24 |[0m       package_name: str = text("Enter the package name", default="ragbits-")
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mscripts/update_ragbits_package.py[0m[36m:[0m29[36m:[0m5[36m:[0m [1;31mD200[0m One-line docstring should fit on one line
[1;38;5;12m   |[0m
[1;38;5;12m28 |[0m   class UpdateType(Enum):
[1;38;5;12m29 |[0m       """Enum representing the type of version update: major, minor, or patch.
[1;38;5;12m   |[0m  [1;38;5;9m_____^[0m
[1;38;5;12m30 |[0m [1;38;5;9m|[0m     """
[1;38;5;12m   |[0m [1;38;5;9m|[0m[1;38;5;9m_______^[0m [1;38;5;9mD200[0m
[1;38;5;12m31 |[0m   
[1;38;5;12m32 |[0m       MAJOR = "major"
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Reformat to one line

[1mscripts/update_ragbits_package.py[0m[36m:[0m43[36m:[0m5[36m:[0m [1;31mANN202[0m Missing return type annotation for private function `_version_to_list`
[1;38;5;12m   |[0m
[1;38;5;12m43 |[0m def _version_to_list(version_string):
[1;38;5;12m   |[0m[1;38;5;9m     ^^^^^^^^^^^^^^^^[0m [1;38;5;9mANN202[0m
[1;38;5;12m44 |[0m     return [int(part) for part in version_string.split(".")]
[1;38;5;12m   |[0m
   [1;38;5;12m=[0m [1;38;5;14mhelp[0m: Add return type annotation

[1mscripts/update_ragbits_package.py[0m[36m:[0m43[36m:[0m22[36m:[0m [1;31mANN001[0m Missing type annotation for function argument `version_string`
[1;38;5;12m   |[0m
[1;38;5;12m43 |[0m def _version_to_list(version_string):
[1;38;5;12m   |[0m[1;38;5;9m                      ^^^^^^^^^^^^^^[0m [1;38;5;9mANN001[0m
[1;38;5;12m44 |[0m     return [int(part) for part in version_string.split(".")]
[1;38;5;12m   |[0m

[1mscripts/update_ragbits_package.py[0m[36m:[0m95[36m:[0m5[36m:[0m [1;31mS101[0m Use of `assert` detected
[1;38;5;12m   |[0m
[1;38;5;12m93 |[0m     (PACKAGES_DIR / pkg_name / "pyproject.toml").write_text(tomlkit.dumps(pkg_pyproject))
[1;38;5;12m94 |[0m 
[1;38;5;12m95 |[0m     assert isinstance(new_version, str)
[1;38;5;12m   |[0m[1;38;5;9m     ^^^^^^[0m [1;38;5;9mS101[0m
[1;38;5;12m96 |[0m     pprint(f"[green]The {pkg_name} package was successfully updated from {version} to {new_version}.[/green]")
[1;38;5;12m   |[0m

Found 95 errors.
No fixes available (58 hidden fixes can be enabled with the `--unsafe-fixes` option).

